#!/bin/bash

function render {
  clear
  echo -e "$(tput setaf 136)$(figlet -f $1  -c -w $( tput cols ) $( hostname -s ) )\n"
}

function help {
  echo -e "\n\n$(tput setaf 7)Key bindings:"
  echo "n x > .  ==>  next"
  echo "p z < ,  ==>  previous"
  echo "s        ==>  star/unstar font"
  echo "l        ==>  toggle list of starred fonts"
  echo "h        ==>  toggle help display"
  echo -e "q        ==>  quit\n"
}

function main {
  declare -a FONTS

  for fontfile in $( figlet -I 2 )/* ; do
    filename=$( basename "${fontfile}" )
    if [[ "${filename##*.}" =~ lf$ ]]; then
       FONTS=("${FONTS[@]}" "${filename%.*}")
    fi
  done

  showstarred=0
  showhelp=0
  numfonts="${#FONTS[@]}"
  i=0

  while : ; do
    render "${FONTS[$i]}"

    local isStarred="starred_$i"
    if [[ "${!isStarred}" == '1' ]] ; then
      printf '%s' "* "
    fi
    echo "${FONTS[$i]} ($(($i + 1))/${numfonts})"

    if [[ "${showstarred}" == '1' ]] ; then
        echo -e "\n\n$(tput setaf 7)Starred fonts:"
        for f in "${!FONTS[@]}"; do
          local fIsStarred="starred_$f"
          if [[ "${!fIsStarred}" == '1' ]] ; then
            echo "${FONTS[$f]}"
          fi
        done
        echo -e "\n"
    fi

    [[ "${showhelp}" == '1' ]] && help

    read -s -n 1 key

    case "${key}" in
      'p'|','|'<'|'z')
        i=$(( $i - 1 ))
        [[ $i -lt 0 ]] && i="$(( ${numfonts} - 1 ))"
        ;;
      'n'|'.'|'>'|'x')
        i=$(( $i + 1 ))
        [[ $i -eq "${numfonts}" ]] && i=0
        ;;
      's')
        [[ "${!isStarred}" == '1' ]] && declare "starred_$i=0" || declare "starred_$i=1"
        ;;
      'l')
        [[ "${showstarred}" == '1' ]] && showstarred=0 || showstarred=1
        ;;
      'h')
        [[ "${showhelp}" == '1' ]] && showhelp=0 || showhelp=1
        ;;
      'q')
        return;;
    esac

  done
}

main "$@"
